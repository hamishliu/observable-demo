version: '3.3'

services:
    springboot_opentelemetry_jaeger_server:
        image: springboot_opentelemetry_jaeger_server:v1
        build:
            # 将dockerfile放到当前目录，并重命名为DockerfileServer
            dockerfile: DockerfileServer
            context: .
        container_name: springboot_opentelemetry_jaeger_server
        ports:
            - 8080:8080
        environment:
            # 外网ip，用于访问jaeger UI
            - EXTRA_HOST=192.168.91.11
            - OTEL_TRACES_EXPORTER=jaeger
            - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
            - OTEL_EXPORTER_JAEGER_TIMEOUT=10000
            - JAVA_OPTS=-javaagent:opentelemetry-javaagent.jar -Dotel.resource.attributes=service.name=observble_server -Dotel.javaagent.debug=false -Dotel.metrics.exporter=none
        depends_on:
            - jaeger
    springboot_opentelemetry_jaeger_client:
        image: springboot_opentelemetry_jaeger_client:v1
        build:
            # 将dockerfile放到当前目录，并重命名为DockerfileClient
            dockerfile: DockerfileClient
            context: .
        container_name: springboot_opentelemetry_jaeger_client
        ports:
            - 8081:8081
        environment:
            # 外网ip，用于访问jaeger UI
            - EXTRA_HOST=192.168.91.11
            - OTEL_TRACES_EXPORTER=jaeger
            - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
            - OTEL_EXPORTER_JAEGER_TIMEOUT=10000
            - JAVA_OPTS=-javaagent:opentelemetry-javaagent.jar -Dotel.resource.attributes=service.name=observble_client -Dotel.javaagent.debug=false -Dotel.metrics.exporter=none
        depends_on:
            - jaeger
    jaeger:
        image: jaegertracing/all-in-one:1.29
        ports:
            - 5775:5775/udp
            - 6831:6831/udp
            - 6832:6832/udp
            - 5778:5778
            - 16686:16686
            - 14250:14250
            - 14268:14268
            - 14269:14269
            - 9411:9411